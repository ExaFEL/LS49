Complete instructions to test nanoBragg + Sauter simulations + DIALS. Purpose:
1) Develop with confidence that nothing has broken
2) Use regression tests for port to peta- and exascale

Pre-requisites.
1) Linux box with many cores (like 64).  Use bash shell.
2) untar big data file from Nick "ls49_big_data.tgz". export LS49_BIG_DATA=<untarred directory path>
3) Make sure your conda environment file (~/.condarc) has the following:
channels:
  - cctbx
  - conda-forge 
  - defaults
  - bioconda

report_errors: false
4) Create and change to a working directory ${WORK}

Download three files to configure the environment
  (cctbx bootstrap installer, conda-Python dependency definitions, and miniconda installer [tested with conda 4.5.2]):

wget https://raw.githubusercontent.com/cctbx/cctbx_project/master/libtbx/auto_build/bootstrap.py --no-check-certificate
wget https://raw.githubusercontent.com/nksauter/LS49/master/tests/dials_env.txt --no-check-certificate
wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh --no-check-certificate
chmod u+x Miniconda2-latest-Linux-x86_64.sh
./Miniconda2-latest-Linux-x86_64.sh
# install in directory ${WORK}/miniconda2
# do not prepend Miniconda2 to .bashrc

source miniconda2/etc/profile.d/conda.sh
conda create -y --name myEnv --file dials_env.txt
conda activate myEnv
which python # verify that you are using the miniconda myEnv python

python -m pip install procrunner
python bootstrap.py hot --builder=dials
python bootstrap.py update --builder=dials
git clone git@github.com:nksauter/LS49.git
mkdir build
cd build
python ../modules/cctbx_project/libtbx/configure.py --enable_openmp_if_possible=True LS49 prime iota

source build/setpaths.sh
cd build; make; cd -
mkdir test
cd test
rm -rf *
export OMP_NUM_THREADS=8
libtbx.python ${WORK}/modules/LS49/tests/public-test-all.py

# optional -- add more tests if you have log in access to LBL
svn checkout svn+ssh://sauter@cci.lbl.gov/dials_regression/trunk dials_regression
svn checkout svn+ssh://sauter@cci.lbl.gov/xfel_regression/trunk xfel_regression
svn checkout svn+ssh://sauter@cci.lbl.gov/labelit/trunk labelit
svn checkout svn+ssh://sauter@cci.lbl.gov/labelit_regression/trunk labelit_regression
libtbx.configure dials_regression xfel_regression labelit labelit_regression
# edit the public-test-all.py script to add these tests


